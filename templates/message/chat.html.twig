{% extends 'main/home.html.twig' %}
{% block title %}
    chat {{ parent() }}
{% endblock %}

{% block header %}
{% endblock %}

{% block body %}

    <div class="chat-container">
        <div class="chat-title">
            <a href="{{ path('app_message') }}"><img src="{{ asset('icon/arrow left.png') }}" id="flechGaucheChat"
                                                     alt="précédent"></a>
            {% if app.user == message.produit.vendeur %}
                <h3>Vendu par vous</h3>
            {% else %}
                <h3>Vendu par : {{ message.produit.vendeur.nom }}</h3>
            {% endif %}

            <img src=" {{ asset('imageProduit/' ~ message.produit.image) }}" alt="{{ message.produit.nom }}">
            <p> {{ message.produit.nom }}</p>


            <div class="menu-item-chat"><a href="#"><img src="{{ asset('img/menu-vertical.png') }}" id="clipart"
                                                         alt="menu lateral"></a>
                <ul class="sub-menu-chat">
                    <li>
                        <a href="{{ path('signalisation_create', {'id': destinataire.id, 'idProduit': message.produit.id}) }}">Signaler
                            l'utilisateur</a></li>
                </ul>
            </div>

        </div>

        <div class="message-chat">
            {% for mess in messages %}
                {% if mess.envoyeur == app.user %}
                    <div class="message-container utilisateur-connecte" onclick="toggleDetails(this)">
                        <div class="message">
                            <p>{{ mess.message }}</p>
                            {% if mess.image %}
                                <div class="message-image"><img src="{{ asset('imageChat/' ~ mess.image) }}"
                                                                alt="{{ message.produit.nom }}"></div>

                            {% endif %}
                            {% if mess.fichier %}
                                <div class="message-fichier"><a href="{{ asset('fichierChat/' ~ mess.fichier) }}"><img
                                                src="{{ asset('icon/bouton piece joint.png') }}" alt="piece jointe"></a>
                                </div>
                            {% endif %}
                            <div class="message-details"><p>envoyé par vous a
                                    : {{ mess.dateDeCreation|date('d/m/Y H:i:s') }}</p></div>
                        </div>

                    </div>
                {% else %}
                    <div class="message-container utilisateur-cible" onclick="toggleDetails(this)">
                        <div class="message">
                            <p>{{ mess.message }}</p>
                            {% if mess.image %}
                                <div class="message-image"><img src="{{ asset('imageChat/' ~ mess.image) }}"
                                                                alt="{{ message.produit.nom }}"></div>

                            {% endif %}
                            {% if mess.fichier %}
                                <div class="message-fichier"><a href="{{ asset('fichierChat/' ~ mess.fichier) }}"><img
                                                src="{{ asset('icon/bouton piece joint.png') }}" alt="piece jointe"></a>
                                </div>
                            {% endif %}
                            <div class="message-details"><p>envoyé par {{ mess.destinataire.nom }} a
                                    : {{ mess.dateDeCreation|date('d/m/Y H:i:s') }}</p></div>
                        </div>

                    </div>
                {% endif %}
            {% endfor %}
        </div>
        <div class="chat-form">
            {{ form_start(formchat, {'attr': {'id': 'formchat'}}) }}


            <div class="select-file">
                <label for="message_fichier"><img src="{{ asset('icon/bouton piece joint.png') }}"
                                                  alt="piece jointe"></label>
                {{ form_row(formchat.fichier, {'attr': {'style': 'display: none;'}, 'label': false}) }}
            </div>

            <div class="select-image">
                <label for="message_image"><img src="{{ asset('icon/bouton photo.png') }}" alt="envoie d'image"></label>
                {{ form_row(formchat.image, {'attr': {'style': 'display: none;'}, 'label': false}) }}
            </div>

            <div class="chat-input">
                {{ form_row(formchat.message, {'attr': {'id': 'formchat-message'}}) }}
            </div>

            <div class="chat-bouton">
                <button id="buttonForm" type="submit"><img src="{{ asset('icon/bouton envoyer.png') }}"
                                                           alt="bouton envoyer"></button>
                {{ form_row(formchat.submit, {'attr': {'style': 'display: none;'}, 'label': false}) }}
            </div>

            {{ form_end(formchat) }}

        </div>


    </div>

    {% for message in app.flashes('chat-error') %}
        <div class="message-flash">
            {{ message }}
        </div>
    {% endfor %}



{% endblock %}

{% block footer %}
    <div class="copyright">
        <img src="{{ asset('img/logo sell me.png') }}" alt="Sell Me">
        <div> &copy;{{ "now"|date("Y") }} Sell Me</div>
    </div>
{% endblock %}

{% block javascript %}
<script>

    const eventSource = new EventSource("{{ mercure('https://mercure.test/chat')|escape('js') }}");
eventSource.onmessage = event => {
    const messageContainer = document.querySelector('.message-chat');
    const newMessage = document.createElement('div');
    const eventData = JSON.parse(event.data);

    const message = eventData.message;
    const envoyeur = eventData.envoyeur;
    const destinataire = eventData.destinataire;
    const image = eventData.image;
    const fichier = eventData.fichier;
    const userId = {{ app.user.id }}; // Récupérez l'identifiant de l'utilisateur connecté depuis Symfony

    // Déterminez la classe à appliquer en fonction de l'identifiant de l'expéditeur
    let messageClass = (envoyeur === userId) ? 'utilisateur-connecte' : 'utilisateur-cible';

    // Ajoutez la classe au nouvel élément de message
    newMessage.classList.add('message-container');
    newMessage.classList.add(messageClass);

    // Ajoutez le contenu du message au nouvel élément
    newMessage.innerHTML = `
        <div class="message">
            <p>${message}</p>
             ${image ? `<div class="message-image"><img src="{{ asset('imageChat/') }}${image}" alt="Image"></div>` : ''}
             ${fichier ? `<div class="message-fichier"><a href="{{ asset('fichierChat/') }}${fichier}" > <img src="{{ asset('icon/bouton piece joint.png') }}"> </a></div>` : ''}
        </div>
    `;


    // Ajoutez le nouvel élément de message à la liste des messages
    messageContainer.appendChild(newMessage);
    scrollToBottom();
}


document.addEventListener("DOMContentLoaded", function() {
    const form = document.getElementById("formchat");
    const messageInput = document.getElementById("message_message");
    const imageInput = document.getElementById("message_image");

    console.log("Form:", form);
    console.log("Message Input:", messageInput);
    console.log("Image Input:", imageInput);

    form.addEventListener("submit", function(event) {
        event.preventDefault(); // Empêche le comportement par défaut du formulaire

        // Effectuez ici votre logique pour envoyer les données du formulaire via AJAX
        const formData = new FormData(form);
        fetch("{{ path('app_chat', {'id': destinataire.id, 'produitId': message.produit.id}) }}", {
            method: "POST",
            body: formData
        })
        .then(response => {
            if (response.ok) {
                // Faire quelque chose après une soumission réussie du formulaire
                // Par exemple, vider le champ de message
                form.reset();
            } else {
                // Gérer les erreurs en cas d'échec de la soumission du formulaire
                console.error("Erreur lors de la soumission du formulaire");
            }
        })
        .catch(error => {
            console.error("Erreur lors de la soumission du formulaire:", error);
        });
    });

    messageInput.addEventListener("input", toggleSubmitButton);
    imageInput.addEventListener("input", toggleSubmitButton);

    // Fonction pour activer ou désactiver le bouton d'envoi en fonction de la saisie dans les champs
    function toggleSubmitButton() {
        console.log("Message Input Value:", messageInput.value);
        console.log("Image Input Value:", imageInput.value);

        const button = document.getElementById("buttonForm");
        if (messageInput.value.trim() === "" && imageInput.value.trim() === "") {
            button.disabled = true; // Désactive le bouton si les champs sont vides
        } else {
            button.disabled = false; // Active le bouton si au moins un champ est rempli
        }
    }
});

window.onload = function() {
    scrollToBottom();
};

function scrollToBottom() {
    var messageContainer = document.querySelector('.message-chat');
    messageContainer.scrollTop = messageContainer.scrollHeight;
}

function toggleDetails(element) {
    var details = element.querySelector('.message-details');
    if (details.style.display === 'none') {
        details.style.display = 'block'; // Si les détails sont visibles, les masquer
    } else {
        details.style.display = 'none'; // Sinon, les afficher
    }
}



var menuItems = document.querySelectorAll('.menu-item-chat');

    // Parcourez chaque élément parent et ajoutez un gestionnaire d'événement de clic
    menuItems.forEach(function(item) {
        item.addEventListener('click', function() {
            // Sélectionnez le sous-menu correspondant à l'élément parent actuel
            var subMenu = item.querySelector('.sub-menu-chat');

            // Vérifiez si le sous-menu est visible ou caché
            if (subMenu.style.display === 'block') {
                subMenu.style.display = 'none'; // Si visible, cachez le sous-menu
            } else {
                subMenu.style.display = 'block'; // Sinon, affichez le sous-menu
            }
        });
    });
</script>
{% endblock %}
